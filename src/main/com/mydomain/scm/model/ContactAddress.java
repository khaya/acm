package com.mydomain.scm.model;
// Generated 13 Jan 2010 3:10:57 PM by Hibernate Tools 3.2.4.GA

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * ContactAddress generated by hbm2java
 */
@Entity
@Table(name = "contact_address", catalog = "advcm_db")
public class ContactAddress implements java.io.Serializable {

	private Integer id;
	private Contact contact;
	private int position;
	private String address1;
	private String address2;
	private String postCode;
	private String city;
	private String province;
	private String country;
	private String label;
	private Date createdOn;
	private Date lastUpdatedOn;

	public ContactAddress() {
	}

	public ContactAddress(Contact contact, int position, String label,
			Date createdOn, Date lastUpdatedOn) {
		this.contact = contact;
		this.position = position;
		this.label = label;
		this.createdOn = createdOn;
		this.lastUpdatedOn = lastUpdatedOn;
	}
	public ContactAddress(Contact contact, int position, String address1,
			String address2, String postCode, String city, String province,
			String country, String label, Date createdOn, Date lastUpdatedOn) {
		this.contact = contact;
		this.position = position;
		this.address1 = address1;
		this.address2 = address2;
		this.postCode = postCode;
		this.city = city;
		this.province = province;
		this.country = country;
		this.label = label;
		this.createdOn = createdOn;
		this.lastUpdatedOn = lastUpdatedOn;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ContactId", nullable = false)
	@NotNull
	public Contact getContact() {
		return this.contact;
	}

	public void setContact(Contact contact) {
		this.contact = contact;
	}

	@Column(name = "position", nullable = false)
	public int getPosition() {
		return this.position;
	}

	public void setPosition(int position) {
		this.position = position;
	}

	@Column(name = "address1")
	public String getAddress1() {
		return this.address1;
	}

	public void setAddress1(String address1) {
		this.address1 = address1;
	}

	@Column(name = "address2")
	public String getAddress2() {
		return this.address2;
	}

	public void setAddress2(String address2) {
		this.address2 = address2;
	}

	@Column(name = "postCode", length = 50)
	@Length(max = 50)
	public String getPostCode() {
		return this.postCode;
	}

	public void setPostCode(String postCode) {
		this.postCode = postCode;
	}

	@Column(name = "city")
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "province", length = 50)
	@Length(max = 50)
	public String getProvince() {
		return this.province;
	}

	public void setProvince(String province) {
		this.province = province;
	}

	@Column(name = "country")
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@Column(name = "label", nullable = false)
	@NotNull
	public String getLabel() {
		return this.label;
	}

	public void setLabel(String label) {
		this.label = label;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdOn", nullable = false, length = 19)
	@NotNull
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastUpdatedOn", nullable = false, length = 19)
	@NotNull
	public Date getLastUpdatedOn() {
		return this.lastUpdatedOn;
	}

	public void setLastUpdatedOn(Date lastUpdatedOn) {
		this.lastUpdatedOn = lastUpdatedOn;
	}

}
