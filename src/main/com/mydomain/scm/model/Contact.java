package com.mydomain.scm.model;
// Generated 13 Jan 2010 3:10:57 PM by Hibernate Tools 3.2.4.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.Email;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;
import org.jboss.seam.annotations.intercept.PrePassivate;

/**
 * Contact generated by hbm2java
 */
@Entity
@Table(name = "contact", catalog = "advcm_db")
public class Contact implements java.io.Serializable {

	private Integer id;
	private Contact contact;
	private String name;
	private String surname;
	private String email;
	private String company;
	private String username;
	private String password;
	private Date createdOn;
	private Date lastUpdatedOn;
	private Date lastAccessOn;
	private String note;
	private Boolean active;
	private Set<ContactGroup> contactGroups = new HashSet<ContactGroup>(0);
	private Set<ContactField> contactFields = new HashSet<ContactField>(0);
	private Set<ContactGroup> contactGroups_1 = new HashSet<ContactGroup>(0);
	private Set<ContactFile> contactFiles = new HashSet<ContactFile>(0);
	private Set<ContactInGroup> contactInGroups = new HashSet<ContactInGroup>(0);
	private Set<ContactAddress> contactAddresses = new HashSet<ContactAddress>(
			0);
	private Set<Contact> contacts = new HashSet<Contact>(0);
	private Set<Contact> contacts_1 = new HashSet<Contact>(0);
	private Set<ContactFile> contactFiles_1 = new HashSet<ContactFile>(0);
	private Set<ContactInGroup> contactInGroups_1 = new HashSet<ContactInGroup>(
			0);
	private Set<ContactAddress> contactAddresses_1 = new HashSet<ContactAddress>(
			0);
	private Set<ContactField> contactFields_1 = new HashSet<ContactField>(0);

	public Contact() {
	}

	public Contact(Date createdOn, Date lastUpdatedOn) {
		this.createdOn = createdOn;
		this.lastUpdatedOn = lastUpdatedOn;
	}
	public Contact(Contact contact, String name, String surname, String email,
			String company, String username, String password, Date createdOn,
			Date lastUpdatedOn, Date lastAccessOn, String note, Boolean active,
			Set<ContactGroup> contactGroups, Set<ContactField> contactFields,
			Set<ContactGroup> contactGroups_1, Set<ContactFile> contactFiles,
			Set<ContactInGroup> contactInGroups,
			Set<ContactAddress> contactAddresses, Set<Contact> contacts,
			Set<Contact> contacts_1, Set<ContactFile> contactFiles_1,
			Set<ContactInGroup> contactInGroups_1,
			Set<ContactAddress> contactAddresses_1,
			Set<ContactField> contactFields_1) {
		this.contact = contact;
		this.name = name;
		this.surname = surname;
		this.email = email;
		this.company = company;
		this.username = username;
		this.password = password;
		this.createdOn = createdOn;
		this.lastUpdatedOn = lastUpdatedOn;
		this.lastAccessOn = lastAccessOn;
		this.note = note;
		this.active = active;
		this.contactGroups = contactGroups;
		this.contactFields = contactFields;
		this.contactGroups_1 = contactGroups_1;
		this.contactFiles = contactFiles;
		this.contactInGroups = contactInGroups;
		this.contactAddresses = contactAddresses;
		this.contacts = contacts;
		this.contacts_1 = contacts_1;
		this.contactFiles_1 = contactFiles_1;
		this.contactInGroups_1 = contactInGroups_1;
		this.contactAddresses_1 = contactAddresses_1;
		this.contactFields_1 = contactFields_1;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ContactOwner")
	public Contact getContact() {
		return this.contact;
	}

	public void setContact(Contact contact) {
		this.contact = contact;
	}

	@Column(name = "name", length = 45)
	@Length(min=3,max = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "surname", length = 45)
	@Length(min=3,max = 45)
	public String getSurname() {
		return this.surname;
	}

	public void setSurname(String surname) {
		this.surname = surname;
	}

	@Column(name = "email")
        @NotNull
        @Email
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "company")
	public String getCompany() {
		return this.company;
	}

	public void setCompany(String company) {
		this.company = company;
	}

	@Column(name = "username", length = 20)
	@Length(min=5 , max = 20)
//        @NotNull
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", length = 20)
	@Length(max = 20)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdOn", nullable = false, length = 19)
	@NotNull
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastUpdatedOn", nullable = false, length = 19)
	@NotNull
	public Date getLastUpdatedOn() {
		return this.lastUpdatedOn;
	}

	public void setLastUpdatedOn(Date lastUpdatedOn) {
		this.lastUpdatedOn = lastUpdatedOn;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastAccessOn", length = 19)
	public Date getLastAccessOn() {
		return this.lastAccessOn;
	}

	public void setLastAccessOn(Date lastAccessOn) {
		this.lastAccessOn = lastAccessOn;
	}

	@Column(name = "note", length = 65535)
	@Length(max = 65535)
	public String getNote() {
		return this.note;
	}

	public void setNote(String note) {
		this.note = note;
	}

	@Column(name = "active")
	public Boolean getActive() {
		return this.active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contact")
	public Set<ContactGroup> getContactGroups() {
		return this.contactGroups;
	}

	public void setContactGroups(Set<ContactGroup> contactGroups) {
		this.contactGroups = contactGroups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contact")
	public Set<ContactField> getContactFields() {
		return this.contactFields;
	}

	public void setContactFields(Set<ContactField> contactFields) {
		this.contactFields = contactFields;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contact")
	public Set<ContactGroup> getContactGroups_1() {
		return this.contactGroups_1;
	}

	public void setContactGroups_1(Set<ContactGroup> contactGroups_1) {
		this.contactGroups_1 = contactGroups_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contact")
	public Set<ContactFile> getContactFiles() {
		return this.contactFiles;
	}

	public void setContactFiles(Set<ContactFile> contactFiles) {
		this.contactFiles = contactFiles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contact")
	public Set<ContactInGroup> getContactInGroups() {
		return this.contactInGroups;
	}

	public void setContactInGroups(Set<ContactInGroup> contactInGroups) {
		this.contactInGroups = contactInGroups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contact")
	public Set<ContactAddress> getContactAddresses() {
		return this.contactAddresses;
	}

	public void setContactAddresses(Set<ContactAddress> contactAddresses) {
		this.contactAddresses = contactAddresses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contact")
	public Set<Contact> getContacts() {
		return this.contacts;
	}

	public void setContacts(Set<Contact> contacts) {
		this.contacts = contacts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contact")
	public Set<Contact> getContacts_1() {
		return this.contacts_1;
	}

	public void setContacts_1(Set<Contact> contacts_1) {
		this.contacts_1 = contacts_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contact")
	public Set<ContactFile> getContactFiles_1() {
		return this.contactFiles_1;
	}

	public void setContactFiles_1(Set<ContactFile> contactFiles_1) {
		this.contactFiles_1 = contactFiles_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contact")
	public Set<ContactInGroup> getContactInGroups_1() {
		return this.contactInGroups_1;
	}

	public void setContactInGroups_1(Set<ContactInGroup> contactInGroups_1) {
		this.contactInGroups_1 = contactInGroups_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contact")
	public Set<ContactAddress> getContactAddresses_1() {
		return this.contactAddresses_1;
	}

	public void setContactAddresses_1(Set<ContactAddress> contactAddresses_1) {
		this.contactAddresses_1 = contactAddresses_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contact")
	public Set<ContactField> getContactFields_1() {
		return this.contactFields_1;
	}

	public void setContactFields_1(Set<ContactField> contactFields_1) {
		this.contactFields_1 = contactFields_1;
	}


        @PrePersist
        public void prePersist(){
            setCreatedOn(new Date());
            setLastUpdatedOn(new Date());
        }

        @PreUpdate
        public void preUpdate(){
            setLastUpdatedOn(new Date());
        }
}
